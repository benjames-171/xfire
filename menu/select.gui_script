local data = require "main.data"
local ui = require "main.ui"

local MENU_LEN = 8

local DIFF = {"EASY", "NORMAL", "HARD"}
local LENGTH = {"SHORT", "MEDIUM", "LONG"}
local TIME = {"5-10 MINUTES", "10-15 MINUTES", "15-20 MINUTES"}
local MODE = {"LTS", "CTF"}
local MODEB = {"LAST TEAM STANDING", "CAPTURE THE FLAG"}

local function settext()
	data.save.mode = data.wrap(data.save.mode, 1, 2)
	data.save.diff = data.wrap(data.save.diff, 1, 3)
	data.save.length = data.wrap(data.save.length, 1, 3)

	gui.set_text(gui.get_node("mode"), MODE[data.save.mode])
	gui.set_text(gui.get_node("modeb"), MODEB[data.save.mode])
	gui.set_text(gui.get_node("diff"), DIFF[data.save.diff])
	gui.set_text(gui.get_node("length"), LENGTH[data.save.length])
	gui.set_text(gui.get_node("time"), TIME[data.save.length])

	local text = "ON"
	if not data.save.hints then
		text = "OFF"
	end
	gui.set_text(gui.get_node("hints"), text)

	if data.save.ai[1] then
		text = "COMPUTER"
	else
		text = "PLAYER 1"
	end
	data.teamname[1] = text
	gui.set_text(gui.get_node("red"), text)

	if data.save.ai[2] then
		text = "COMPUTER"
	elseif data.save.ai[1] then
		text =  "PLAYER 1"
	else
		text = "PLAYER 2"
	end
	data.teamname[2] = text
	gui.set_text(gui.get_node("blue"), text)
end

function init(self)
	self.handpos = 1
	self.arrowpos = {
		gui.get_position(gui.get_node("mode1")),
		gui.get_position(gui.get_node("length1")),
		gui.get_position(gui.get_node("diff1")),
		gui.get_position(gui.get_node("hints1")),
		gui.get_position(gui.get_node("red1")),
		gui.get_position(gui.get_node("blue1")),
		gui.get_position(gui.get_node("start")),
		gui.get_position(gui.get_node("back")),
	}

	self.node = gui.get_node("container")
	settext()
	ui.init(self.node)
end

local function show(self)
	ui.show(self.node)
	self.handpos = 7
	data.state = data.STATE_SELECT
end

function update(self, dt)
	if data.state == data.STATE_SELECT then
		local pos = vmath.vector3(self.arrowpos[self.handpos].x - 10, self.arrowpos[self.handpos].y, 0)
		gui.set_position(gui.get_node("arrow"), pos)
	end
end

local function startgame(self)
	data.stopmusic()
	data.savegamefile()
	data.hints = {}
	data.level = data.save.length
	data.state = data.STATE_PLAYING
	data.flaginplay = false
	msg.post("main:/handler", "show_game")
end

local function close(self)
	ui.hide(self.node)
	msg.post("#menu", "show")
	data.sound("menu-back")
end

local function input(self, action_id, action)
	if action_id == hash("up") and action.pressed then
		self.handpos = self.handpos - 1
		self.handpos = data.wrap(self.handpos, 1, MENU_LEN)
		data.sound("menu-move")
	elseif action_id == hash("down") and action.pressed then
		self.handpos = self.handpos + 1
		self.handpos = data.wrap(self.handpos, 1, MENU_LEN)
		data.sound("menu-move")
	elseif action_id == hash("action") and action.pressed then
		if self.handpos == 1 then
			data.save.mode = data.save.mode + 1
			data.sound("step")
			settext()
		elseif self.handpos == 2 then
			data.save.length = data.save.length + 1
			data.sound("step")
			settext()
		elseif self.handpos == 3 then
			data.save.diff = data.save.diff + 1
			data.sound("step")
			settext()
		elseif self.handpos == 4 then
			data.save.hints = not data.save.hints
			data.sound("step")
			settext()
		elseif self.handpos == 5 then
			data.save.ai[1] = not data.save.ai[1]
			data.sound("step")
			settext()
		elseif self.handpos == 6 then
			data.save.ai[2] = not data.save.ai[2]
			data.sound("step")
			settext()
		elseif self.handpos == 7 then
			ui.hide(self.node)
			data.state = data.STATE_NULL
			timer.delay(0.2, false, function() startgame(self) end)
		elseif self.handpos == 8 then
			close(self)
		end
	elseif (action_id == hash("back") or action_id == hash("esc")) and action.pressed then
		close(self)
	end
end

function on_message(self, message_id, message)
	if message_id == hash("show") then
		show(self)
	elseif message_id == hash("input") then
		input(self, message.action_id, message.action)
	end
end
