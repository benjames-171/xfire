local data = require "main.data"
local unit = require "game.unit.unit"

local hints = {
	"PRESS SELECT ON A BLANK TILE TO SHOW THE COMMAND MENU",
	"USE LEFT & RIGHT KEYS TO SWITCH BETWEEN TARGETS",
	"IN CURSOR MODE, PRESS <BACK> TO SWITCH BETWEEN UNITS",
	"SELECT 'REGENERATE' FROM COMMAND MENU TO REGAIN 2 HP",
	"TAKE THE FLAG BACK TO YOUR BASE"
}

local turntext = {"RED TEAM'S TURN - ", "BLUE TEAM'S TURN - "}

function init(self)
	self.hints = {}
	self.handle = nil
	gui.set_render_order(1)
end

function update(self)
	if sys.get_engine_info().is_debug then
		--local text = string.format("FLAG POS %d, %d\nFLAG IN PLAY %s", data.flag.x, data.flag.y, tostring(data.flaginplay))
		--gui.set_text(gui.get_node("debug"), text)
	end
end

local function panel(info)
	if info ~= nil then
		for n = 1, 16 do
			local node = gui.get_node("m"..n)
			gui.set_enabled(node, info.move >= n)
		end
		for n = 1, 8 do
			local node = gui.get_node("f"..n)
			gui.set_enabled(node, info.fire >= n)
		end

		gui.set_enabled(gui.get_node("unit"), true)
		gui.set_text(gui.get_node("name"), unit.getname(info.type))
		gui.set_text(gui.get_node("hp"), math.ceil(info.hp))
		gui.set_text(gui.get_node("armor"), math.ceil(info.armor))
		gui.set_text(gui.get_node("power"), math.ceil(info.power))
		gui.play_flipbook(gui.get_node("icon"), info.team.."-"..info.type)
	else
		gui.set_enabled(gui.get_node("unit"), false)
	end
end

local function tick(self, message)
	local node = gui.get_node("tickbox")
	local textnode = gui.get_node("tick")
	local time = message.time or 2
	gui.set_enabled(node, true)

	if message.color then
		gui.set_color(textnode, data.hex2rgba(message.color))
	else
		gui.set_color(textnode, vmath.vector4(1))
	end
	gui.set_text(textnode, message.text)

	if self.handle then
		timer.cancel(self.handle)
	end

	self.handle = timer.delay(time, false, function() gui.set_enabled(node, false) self.handle = nil end)
end

local function cleartick(self)
	if self.handle then
		timer.cancel(self.handle)
		self.handle = nil
	end
	gui.set_enabled(gui.get_node("tickbox"), false)
end

local function hint(self, num)
	local node = gui.get_node("hintbox")
	local textnode = gui.get_node("hint")

	self.hints[num] = true
	gui.set_enabled(node, true)
	gui.set_text(textnode, hints[num])
	timer.delay(5, false, function() gui.set_enabled(node, false) end)
end

local function newturn(self)
	local message = {}
	if unit.turn == 1 then
		message.color = "#ff032b"
	else
		message.color = "#3c80db"
	end
	message.text = turntext[unit.turn]..data.teamname[unit.turn]
	message.time = 3
	tick(self, message)
end

function on_message(self, message_id, message)
	if message_id == hash("tick") then
		tick(self, message)
	elseif message_id == hash("hint") then
		if not self.hints[message.num] and data.save.hints then
			hint(self, message.num)
		end
	elseif message_id == hash("cleartick") then
		cleartick(self)
	elseif message_id == hash("panel") then
		panel(unit.findxy(message.x, message.y))
	elseif message_id == hash("newturn") then
		newturn(self)
	end
end

