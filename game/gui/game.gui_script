local data = require "main.data"
local unit = require "game.unit.unit"

function init(self)
	self.handle = nil
	gui.set_render_order(1)
end

local function panel(info)
	if info ~= nil then
		for n = 1, 16 do
			local node = gui.get_node("m"..n)
			gui.set_enabled(node, info.move >= n)
		end
		for n = 1, 8 do
			local node = gui.get_node("f"..n)
			gui.set_enabled(node, info.fire >= n)
		end

		gui.set_enabled(gui.get_node("unit"), true)
		gui.set_text(gui.get_node("name"), unit.getname(info.type))
		gui.set_text(gui.get_node("hp"), info.hp)
		gui.set_text(gui.get_node("armor"), info.armor)
		gui.set_text(gui.get_node("power"), info.power)
		gui.play_flipbook(gui.get_node("icon"), info.team.."-"..info.type)
	else
		gui.set_enabled(gui.get_node("unit"), false)
	end
end

function on_message(self, message_id, message, sender)
	if message_id == hash("tick") then
		local node = gui.get_node("tickbox")
		local text = gui.get_node("tick")
		gui.set_enabled(node, true)

		if message.color then
			gui.set_color(text, data.hex2rgba(message.color))
		else
			gui.set_color(text, vmath.vector4(1))
		end
		gui.set_text(text, message.text)

		if self.handle then
			timer.cancel(self.handle)
		end
		self.handle = timer.delay(2, false, function() gui.set_enabled(node, false) self.handle = nil end)
	elseif message_id == hash("cleartick") then
		if self.handle then
			timer.cancel(self.handle)
			self.handle = nil
		end
		gui.set_enabled(gui.get_node("tickbox"), false)
	elseif message_id == hash("panel") then
		panel(unit.findxy(message.x, message.y))
	end
end

