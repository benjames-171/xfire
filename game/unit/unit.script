local data = require "main.data"
local unit = require "game.unit.unit"

go.property("team", 1)
go.property("type", 1)

function init(self)
	local anim = self.team.."-"..self.type
	sprite.play_flipbook("#sprite", anim)
	sprite.set_hflip("#sprite", self.team == 2)
	self.move = vmath.vector3()
	self.flash = 0
	self.url = nil
	self.u = nil
	self.target = {}
end

local function move(self)
	local pos = vmath.vector3(self.u.x + self.move.x, self.u.y + self.move.y, 0)
	local t = tilemap.get_tile("/level#tilemap", "world", pos.x, pos.y)
	if not data.walltile(t) and unit.findxy(pos.x, pos.y) == nil then
		self.u.move = self.u.move - 1
		self.u.x = pos.x
		self.u.y = pos.y
		go.set_position(data.tile2world(pos))
		data.cursor = pos
		msg.post("common/view#game", "panel", {x = data.cursor.x, y = data.cursor.y})
		data.sound("step")
		return true
	end
	return false
end

local function findtargets(self)
	local pos = go.get_position()
	self.target = {}
	local total = 0
	for _, v in pairs(unit.data) do
		if self.u.team ~= v.team then
			local target = data.tile2world(vmath.vector3(v.x, v.y, 0))
			local ray = physics.raycast(pos, target, {hash("world")})
			if ray == nil then
				table.insert(self.target, vmath.vector3(v.x, v.y, 0))
				total = total + 1
			end
		end
	end
	if total > 0 then
		local text = string.format("ENEMY SPOTTED [%d]", total)
		msg.post("common/view#game", "tick", {text = text, color = "#ff032b"})
		data.sound("alarm")
	end
	return total
end

local function flash(self, dt)
	self.flash = self.flash + dt
	self.flash = data.wrap(self.flash, 0, 0.4)
	if self.flash > 0.1 then
		msg.post("#sprite", "enable")
	else
		msg.post("#sprite", "disable")
	end
end

function update(self, dt)
	if self.url == unit.current and self.url ~= nil then
		if vmath.length(self.move) ~= 0 and data.state == data.STATE_UNIT and self.u.move > 0 then
			if move(self) then
				local total = findtargets(self)
			end
		end
		flash(self, dt)
		self.move = vmath.vector3()
	end
end

local function fire(self)
	local target = data.tile2world(data.cursor)
	factory.create("#shot-fac", nil, nil, {target = target})
end

local function cancel(self)
	unit.current = nil
	self.url = nil
	data.sound("menu-back")
	msg.post("#sprite", "enable")
	data.state = data.STATE_PLAYING
end

local function input(self, action_id, action)
	if action_id == hash("up") and action.pressed then
		self.move.y = 1
	elseif action_id == hash("down") and action.pressed then
		self.move.y = -1
	elseif action_id == hash("left") and action.pressed then
		self.move.x = -1
	elseif action_id == hash("right") and action.pressed then
		self.move.x = 1
	elseif action_id == hash("action") and action.pressed then
		msg.post("common/view#minimenu", "show", {menu = {"FIRE", "CANCEL"}, caller = self.url})
	elseif action_id == hash("back") and action.pressed then
		cancel(self)
	end
end

function on_message(self, message_id, message, sender)
	if message_id == hash("input") then
		input(self, message.action_id, message.action)
	elseif message_id == hash("select") then
		self.url = unit.current
		self.u = unit.findurl(self.url)
		data.sound("popup")
		findtargets(self)
	elseif message_id == hash("fire") then
		fire(self)
	elseif message_id == hash("lookat") then
		data.cursor = vmath.vector3(self.u.x, self.u.y, 0)
	elseif message_id == hash("cancel") then
		cancel(self)
	end
end